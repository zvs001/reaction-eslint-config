
module.exports = {
  parser: '@typescript-eslint/parser',
  plugins: ['prettier', 'react-native', '@typescript-eslint'],
  extends: [
    './base',
  ],
  rules: {
    indent: [2, 2, { SwitchCase: 1 }],
    camelcase: 'off',
    'max-len': [2, 150],
    'no-use-before-define': 'off',
    'dot-notation': 'off',
    'consistent-return': 'off',
    'no-alert': 'off',
    'key-spacing': [2, { mode: 'minimum' }],
    'new-cap': 'off',
    semi: ['error', 'never', { beforeStatementContinuationChars: 'always' }],
    'linebreak-style': 'off',
    'jsx-no-bind': 'off',
    'class-methods-use-this': 'off',
    'react/prefer-stateless-function': 'off',
    'react/prop-types': 'off',
    eqeqeq: 'off',
    'comma-dangle': ['error', 'always-multiline'],
    'import/default': 'off',
    'react/forbid-component-props': ['error', { forbid: ['class', 'className', 'styles'] }],
    'react/display-name': 'off',
    'no-invalid-this': 'off',
    'object-curly-spacing': ['error', 'always'],
    'array-bracket-spacing': ['error', 'never'],
    'prefer-const': 'off',
    'react/sort-comp': [
      'error',
      {
        order: [
          'static-variables',
          'static-methods',
          '/.+Value$/',
          '/^animated.+/',
          '/.+Ref/',
          'state', // regex
          'constructor', // regex
          'render',
          '/^render.+/',
          '/^wrap.+/',
          '/^save.+Ref$/',
          '/^createHandler.+/',
          '/^handle.+/',
          'everything-else',
          'lifecycle',
        ],
      },
    ],
    'react/jsx-filename-extension': 'off',
    'no-empty': ['error', { allowEmptyCatch: true }],
    'react/forbid-prop-types': 'off',
    'react/destructuring-assignment': 'off',
    'react/jsx-curly-brace-presence': 'off',
    'space-before-blocks': 'error',
    'brace-style': 'error',
    'arrow-spacing': 'error',
    'keyword-spacing': 'error',
    'space-infix-ops': ['error', { int32Hint: true }],
    'react/jsx-one-expression-per-line': 'off',
    'react/require-default-props': 'off',
    // "react/jsx-max-props-per-line": "off",
    'rest-spread-spacing': 'error',
    'no-multi-spaces': 'error',
    'computed-property-spacing': 'error',
    '@typescript-eslint/indent': 'off',
    '@typescript-eslint/camelcase': 'off',
    '@typescript-eslint/no-empty-interface': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/no-use-before-define': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/explicit-member-accessibility': 'off',
    '@typescript-eslint/no-unused-vars': 'error',
    '@typescript-eslint/member-delimiter-style': ['error', { multiline: { delimiter: 'none' } }],
    'react/jsx-wrap-multilines': 'off',
    'react/static-property-placement': 'off',
    'react/state-in-constructor': 'off',
    'import/no-unresolved': 'off', // use ts version rule
    '@typescript-eslint/no-object-literal-type-assertion': 'off',
    'react/jsx-props-no-spreading': 'off',
    'import/extensions': 'off',
    'no-param-reassign': 'off',
  },
  parserOptions: {
    ecmaVersion: 8,
    ecmaFeatures: {
      jsx: true,
    },
    sourceType: 'module',
  },
  globals: {
    __DEV__: true,
  },
  settings: {
    'import/resolver': {
      node: {
        extensions: ['.js', '.ios.js', '.android.js', '.json', '.ts', '.tsx', '.ios.ts', '.android.tsx', '.d.ts'],
      },
    },
  },
  env: {
    jest: true,
  },
}
